(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{398:function(t,r,a){t.exports=a.p+"assets/img/v8compile.5705884b.png"},399:function(t,r,a){t.exports=a.p+"assets/img/v8source.a653f33e.png"},420:function(t,r,a){"use strict";a.r(r);var n=a(56),e=Object(n.a)({},(function(){var t=this,r=t.$createElement,n=t._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"ignition-turbofan如何使内存变小-越来越快的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ignition-turbofan如何使内存变小-越来越快的"}},[t._v("#")]),t._v(" Ignition + TurboFan如何使内存变小，越来越快的？")]),t._v(" "),n("h3",{attrs:{id:"机器码和字节码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#机器码和字节码"}},[t._v("#")]),t._v(" 机器码和字节码")]),t._v(" "),n("ul",[n("li",[t._v("机器码需要更大的内存，可能是源文件千倍的增长")]),t._v(" "),n("li",[t._v("机器码并不是一定都比字节码快：\n"),n("ul",[n("li",[t._v("虽然机器码在执行阶段非常快，但是它需要花费很长时间用来编译。")]),t._v(" "),n("li",[t._v("字节码的编译时间更短，但是代价是执行阶段也更慢。一个解释器在执行字节码之前需要先解释它。")])])]),t._v(" "),n("li",[t._v("机器码增加了开发中的复杂度。如果浏览器只使用机器码，那么它需要分别处理不同类型的 CPU，所以一切始于抽象。")])]),t._v(" "),n("p",[t._v("当我们从头到尾衡量这两个方案时，哪个会更快？这要视情况而定。\n在两种方案之间找到一个平衡：同时为字节码开发出一个更强大的解释器和一个更智能的优化编译器。\nIgnition，V8 使用的解释器，是市面上最快的。\nTurboFan，V8 使用的优化编译器，可以把字节码编译成高度优化的机器码。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(398),alt:"v8compile"}}),t._v(" "),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/461223824",target:"_blank",rel:"noopener noreferrer"}},[t._v("编译和执行机器代码-5"),n("OutboundLink")],1),t._v(" 值得学习")]),t._v(" "),n("h3",{attrs:{id:"v8早期设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v8早期设计"}},[t._v("#")]),t._v(" v8早期设计")]),t._v(" "),n("p",[t._v("早期的V8有Full-Codegen和Crankshaft两个编译器。V8 首先用 Full-Codegen把所有的代码都编译一次，生成对应的机器码。JS在执行的过程中，V8内置的Profiler筛选出热点函数并且记录参数的反馈类型，然后交给 Crankshaft 来进行优化。所以Full-Codegen本质上是生成的是未优化的机器码，而Crankshaft生成的是优化过的机器码。")]),t._v(" "),n("p",[n("strong",[t._v("V8早期架构的缺陷")])]),t._v(" "),n("p",[t._v("随着版本的引进，网页的复杂化，V8也渐渐的暴露出了自己架构上的缺陷：")]),t._v(" "),n("ul",[n("li",[t._v("Full-Codegen编译直接生成机器码，导致内存占用大")]),t._v(" "),n("li",[t._v("Full-Codegen编译直接生成机器码，导致编译时间长，导致启动速度慢")]),t._v(" "),n("li",[t._v("Crankshaft 无法优化try，catch和finally等关键字划分的代码块")]),t._v(" "),n("li",[t._v("Crankshaft新加语法支持，需要为此编写适配不同的Cpu架构代码")])]),t._v(" "),n("h3",{attrs:{id:"v8现在的设计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v8现在的设计"}},[t._v("#")]),t._v(" v8现在的设计")]),t._v(" "),n("p",[t._v("使用新架构后，内存降低了一半多，网页速度提升70%。")]),t._v(" "),n("p",[t._v("Ignition是V8的解释器，背后的原始动机是减少移动设备上的内存消耗。在Ignition之前，V8的Full-codegen基线编译器生成的代码通常占据Chrome整体JavaScript堆的近三分之一。这为Web应用程序的实际数据留下了更少的空间。")]),t._v(" "),n("p",[n("strong",[t._v("Ignition的字节码可以直接用TurboFan生成优化的机器代码，而不必像Crankshaft那样从源代码重新编译。Ignition的字节码在V8中提供了更清晰且更不容易出错的基线执行模型，简化了去优化机制，这是V8 自适应优化的关键特性。最后，由于生成字节码比生成Full-codegen的基线编译代码更快，因此激活Ignition通常会改善脚本启动时间，从而改善网页加载。")])]),t._v(" "),n("h3",{attrs:{id:"举例看优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#举例看优化"}},[t._v("#")]),t._v(" 举例看优化")]),t._v(" "),n("p",[t._v("下文中，add函数传入不同的参数，经过优化生成不同的机器码。\n如果传入的是整型，则本质上是直接调用add汇编指令。\n如果传入的是字符串，则本质上是调用V8的内置Add函数。\n我们可以理解：")]),t._v(" "),n("ol",[n("li",[t._v("根据不同参数类型，调用不同的命令，选择最快的")]),t._v(" "),n("li",[t._v("解释器直接使用优化后的机器码，这也提速了")])]),t._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/111386872",target:"_blank",rel:"noopener noreferrer"}},[t._v("v8执行流程图解"),n("OutboundLink")],1),t._v("值得学习")]),t._v(" "),n("h2",{attrs:{id:"结合v8代码中的类理解编译过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结合v8代码中的类理解编译过程"}},[t._v("#")]),t._v(" 结合V8代码中的类理解编译过程")]),t._v(" "),n("p",[n("img",{attrs:{src:a(399),alt:"context"}})]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://juejin.cn/post/6844904137792962567",target:"_blank",rel:"noopener noreferrer"}},[t._v("结合V8代码中的类理解编译过程"),n("OutboundLink")],1),t._v("了解")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.zhihu.com/column/v8core",target:"_blank",rel:"noopener noreferrer"}},[t._v("V8源码"),n("OutboundLink")],1),t._v("了解")])]),t._v(" "),n("h2",{attrs:{id:"浏览器是如何工作的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是如何工作的"}},[t._v("#")]),t._v(" 浏览器是如何工作的")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://juejin.cn/post/6882529843892731911",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器是如何工作的：Chrome V8让你更懂JavaScript"),n("OutboundLink")],1),t._v("比较全")]),t._v(" "),n("h2",{attrs:{id:"v8的内存管理和垃圾回收机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v8的内存管理和垃圾回收机制"}},[t._v("#")]),t._v(" V8的内存管理和垃圾回收机制")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/470643126",target:"_blank",rel:"noopener noreferrer"}},[t._v("v8内存管理"),n("OutboundLink")],1),t._v("了解")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/55917130",target:"_blank",rel:"noopener noreferrer"}},[t._v("垃圾回收机制"),n("OutboundLink")],1),t._v("了解")])]),t._v(" "),n("h2",{attrs:{id:"面试题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[t._v("#")]),t._v(" 面试题")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/qq_52732369/article/details/122342950",target:"_blank",rel:"noopener noreferrer"}},[t._v("简单的面试题"),n("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=e.exports}}]);